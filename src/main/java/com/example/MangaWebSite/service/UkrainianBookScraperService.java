package com.example.MangaWebSite.service;

import com.example.MangaWebSite.models.Comics;
import com.example.MangaWebSite.models.ComicsType;
import com.example.MangaWebSite.models.ComicsUtil;
import com.example.MangaWebSite.models.PublicationType;
import com.example.MangaWebSite.repository.ComicsRepository;
import lombok.RequiredArgsConstructor;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.io.IOException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.*;
//            Elements items = doc.select("div.product-listing.view-category");
/**
 * –°–µ—Ä–≤—ñ—Å –¥–ª—è —Å–∫—Ä–µ–π–ø—ñ–Ω–≥—É —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏—Ö –∫–Ω–∏–∂–æ–∫ —ñ–∑ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó ¬´–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –ª—ñ—Ç–µ—Ä–∞—Ç—É—Ä–∞¬ª –Ω–∞ Yakaboo.ua.
 * –ù–∞–∑–≤–∞ –π –æ–ø–∏—Å –±–µ—Ä—É—Ç—å—Å—è —ñ–∑ —Å–∞–π—Ç—É (—É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é), —Ä–µ—à—Ç–∞ –ø–æ–ª—ñ–≤ ‚Äî —Ä–∞–Ω–¥–æ–º/–∑–∞–≥–ª—É—à–∫–∏.
 */
@Service
@RequiredArgsConstructor
public class UkrainianBookScraperService {

    private final ComicsRepository comicsRepository;
    private final EmbeddingService embeddingService;

    // URL –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó ¬´–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –ª—ñ—Ç–µ—Ä–∞—Ç—É—Ä–∞¬ª —ñ–∑ –ø–∞–≥—ñ–Ω–∞—Ü—ñ—î—é
    private static final String CATEGORY_URL =
            "https://www.yakaboo.ua/ua/knigi/hudozhestvennaja-literatura/ukrainskaja-literatura.html?p=";

    private final Random random = new Random();

    @Transactional
    public void scrapeAndSaveUkrainianBooks(int count) throws IOException {
        List<Comics> resultList = new ArrayList<>(count);
        Set<String> seenUrls = new HashSet<>();

        int page = 75;
        while (page < count) {
            String pageUrl = CATEGORY_URL + page;
            System.out.println("\n=== –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Å—Ç–æ—Ä—ñ–Ω–∫—É ‚Ññ" + page + ": " + pageUrl);

            Document doc;
            try {
                doc = Jsoup.connect(pageUrl)
                        .userAgent("Mozilla/5.0 (Windows NT 10.0; Win64; x64) " +
                                "AppleWebKit/537.36 (KHTML, like Gecko) " +
                                "Chrome/115.0 Safari/537.36")
                        .timeout(10_000)
                        .get();
                System.out.println("–°—Ç–æ—Ä—ñ–Ω–∫–∞ ‚Ññ" + page + " —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∞.");
            } catch (IOException ex) {
                System.err.println("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É: " + pageUrl);
                break;
            }

            // === 1. –ó–Ω–∞—Ö–æ–¥–∏–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑ —É—Å—ñ–º–∞ –∫–∞—Ä—Ç–∫–∞–º–∏ ===
            // –£ –ø–æ—Ç–æ—á–Ω—ñ–π –≤–µ—Ä—Å—ñ—ó Yakaboo –∫–∞—Ä—Ç–∫–∏ –ª–µ–∂–∞—Ç—å —É <div class="category__cards">
            Element cardsContainer = doc.selectFirst("div.category__cards");
            if (cardsContainer == null) {
                System.out.println("‚ö†Ô∏è –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –∫–∞—Ä—Ç–æ–∫ (div.category__cards) –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ ‚Ññ" + page);
                break;
            }

            // === 2. –ó —É—Å—ñ—Ö –ø—Ä—è–º–∏—Ö –¥–æ—á—ñ—Ä–Ω—ñ—Ö <div> –æ—Ç—Ä–∏–º—É—î–º–æ –∫–æ–∂–Ω—É –∫–∞—Ä—Ç–∫—É –∫–Ω–∏–≥–∏ ===
            Elements items = cardsContainer.select("> div");
            if (items.isEmpty()) {
                System.out.println("‚ö†Ô∏è –£—Å–µ—Ä–µ–¥–∏–Ω—ñ div.category__cards –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∂–æ–¥–Ω–æ—ó –∫–∞—Ä—Ç–∫–∏.");
                break;
            } else {
                System.out.println("‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ " + items.size() + " –∫–∞—Ä—Ç–æ–∫ –∫–Ω–∏–≥–∏ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ ‚Ññ" + page);
            }

            // –ü—Ä–∞–ø–æ—Ä–µ—Ü—å, —á–∏ —Ö–æ—á –æ–¥–Ω—É –Ω–æ–≤—É –∫–∞—Ä—Ç–∫—É –¥–æ–¥–∞–Ω–æ –∑ —Ü—ñ—î—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏
            boolean addedAtLeastOne = false;

            // === 3. –û–±—Ä–æ–±–ª—è—î–º–æ –∫–æ–∂–Ω—É –∫–∞—Ä—Ç–∫—É ===
            for (Element item : items) {
                if (resultList.size() >= count) break;

                // 3.1. –®—É–∫–∞—î–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ detail-—Å—Ç–æ—Ä—ñ–Ω–∫—É (–∑–∞–∑–≤–∏—á–∞–π <a class="category-card__image" href="‚Ä¶">)
                Element linkEl = item.selectFirst("a.category-card__image");
                if (linkEl == null) {
                    System.out.println("  ‚ö†Ô∏è –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –ª—ñ–Ω–∫ (a.category-card__image). –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ.");
                    continue;
                }
                String relativeHref = linkEl.attr("href").trim();
                if (relativeHref.isEmpty()) {
                    System.out.println("  ‚ö†Ô∏è href –ø—É—Å—Ç–∏–π. –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ –∫–∞—Ä—Ç–∫—É.");
                    continue;
                }
                String detailUrl = relativeHref.startsWith("http")
                        ? relativeHref
                        : "https://www.yakaboo.ua" + relativeHref;

                // 3.1.1. –Ø–∫—â–æ –≤–∂–µ –æ–±—Ä–æ–±–ª—è–ª–∏ —Ü—é URL ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ
                if (seenUrls.contains(detailUrl)) {
                    System.out.println("  ‚ÑπÔ∏è –£–∂–µ –æ–±—Ä–æ–±–ª–µ–Ω–æ URL: " + detailUrl + " ‚Üí –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ –¥—É–±–ª—ñ–∫–∞—Ç.");
                    continue;
                }
                // –Ü–Ω–∞–∫—à–µ –¥–æ–¥–∞—î–º–æ –≤ seenUrls —Ç–∞ –≤–º–∏–∫–∞—î–º–æ –ø—Ä–∞–ø–æ—Ä–µ—Ü—å addedAtLeastOne
                seenUrls.add(detailUrl);
                addedAtLeastOne = true;
                System.out.println("  üîó –î–µ—Ç–∞–ª—å–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞: " + detailUrl);

                // 3.2. –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ detail-—Å—Ç–æ—Ä—ñ–Ω–∫—É
                Document detailDoc;
                try {
                    detailDoc = Jsoup.connect(detailUrl)
                            .userAgent("Mozilla/5.0")
                            .timeout(10_000)
                            .get();
                } catch (IOException e) {
                    System.err.println("    ‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ detail-—Å—Ç–æ—Ä—ñ–Ω–∫—É: " + detailUrl);
                    continue;
                }

                // 3.3. –ë–µ—Ä–µ–º–æ –Ω–∞–∑–≤—É –∑ <h1 id="product-title">
                Element titleEl = detailDoc.selectFirst("h1#product-title");
                if (titleEl == null) {
                    System.out.println("    ‚ö†Ô∏è –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –Ω–∞–∑–≤—É (h1#product-title). –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ.");
                    continue;
                }
                String title = titleEl.text().trim();
                if (title.isEmpty()) {
                    System.out.println("    ‚ö†Ô∏è –ù–∞–∑–≤–∞ –ø–æ—Ä–æ–∂–Ω—è. –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ.");
                    continue;
                }
                System.out.println("    üìò –ù–∞–∑–≤–∞: " + title);

                // 3.4. –î—ñ—Å—Ç–∞—î–º–æ –æ–ø–∏—Å –∑ <div id="product-description"> ‚Üí <div class="description__content">
                String description = "";
                Element containerDesc = detailDoc.selectFirst("div#product-description");
                if (containerDesc != null) {
                    Element descEl = containerDesc.selectFirst("div.description__content");
                    if (descEl != null) {
                        description = descEl.text().trim();
                        if (description.isEmpty()) {
                            System.out.println("    ‚ö†Ô∏è –û–ø–∏—Å —î, –∞–ª–µ –≤—ñ–Ω –ø—É—Å—Ç–∏–π.");
                        } else {
                            String snippet = description.length() > 60
                                    ? description.substring(0, 60) + "‚Ä¶"
                                    : description;
                            System.out.println("    üìù –û–ø–∏—Å –æ—Ç—Ä–∏–º–∞–Ω–æ: " + snippet);
                        }
                    } else {
                        System.out.println("    ‚ö†Ô∏è –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤–Ω—É—Ç—Ä—ñ—à–Ω—å–æ–≥–æ –±–ª–æ–∫–∞ –æ–ø–∏—Å—É (div.description__content).");
                    }
                } else {
                    System.out.println("    ‚ö†Ô∏è –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –æ–ø–∏—Å—É (div#product-description).");
                }

                // === 4. –§–æ—Ä–º—É—î–º–æ –æ–±'—î–∫—Ç Comics ===
                Comics book = new Comics();
                book.setTitle(title);
                book.setOriginalTitle(title);
                book.setAuthor("–ê–≤—Ç–æ—Ä –Ω–µ–≤—ñ–¥–æ–º–∏–π");
                book.setDescription(description);
                book.setComicsType(ComicsType.BOOKS);
                book.setPublicationType(PublicationType.BOOK);
                book.setCreatedAt(LocalDateTime.now());
                book.setPublishedAt(randomPastDate(5));
                book.setStatus("PUBLISHED");
                book.setCoverImage(null);
                book.setImageType(null);

                int vc = random.nextInt(1000);
                double pop = 1.0 + random.nextDouble() * 4.0;
                book.setViewCount(vc);
                book.setPopularityRating(pop);
                System.out.println("  üéØ viewCount=" + vc + ", popularityRating=" + String.format("%.2f", pop));

                if (!description.isBlank()) {
                    try {
                        float[] embedding = embeddingService.getEmbedding(description);
                        byte[] embBytes = ComicsUtil.serializeFloatArray(embedding);
                        book.setDescriptionEmbedding(embBytes);
                        System.out.println("    ‚úÖ –ï–º–±–µ–¥–¥—ñ–Ω–≥ —É—Å–ø—ñ—à–Ω–æ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ.");
                    } catch (Exception ex) {
                        book.setDescriptionEmbedding(null);
                        System.err.println("    ‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –µ–º–±–µ–¥–¥—ñ–Ω–≥—É: " + ex.getMessage());
                    }
                } else {
                    book.setDescriptionEmbedding(null);
                }

                book.setGenres(new ArrayList<>());
                book.setChapters(new ArrayList<>());
                book.setComments(new ArrayList<>());
                book.setTabs(new ArrayList<>());
                book.setStatistics(new ArrayList<>());
                book.setRatings(new ArrayList<>());

                resultList.add(book);
                System.out.println("  ‚úÖ –î–æ–¥–∞–Ω–æ –¥–æ —Å–ø–∏—Å–∫—É (—Ç–µ–ø–µ—Ä " + resultList.size() + " –∫–Ω–∏–≥).");
            }

            // –Ø–∫—â–æ –∑ —Ü—ñ—î—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –Ω–µ –¥–æ–¥–∞–ª–æ—Å—è –∂–æ–¥–Ω–æ–≥–æ –Ω–æ–≤–æ–≥–æ URL ‚Üí –≤–∏—Ö–æ–¥–∏–º–æ –∑ —Ü–∏–∫–ª—É
            if (!addedAtLeastOne) {
                System.out.println("\nüõë –ù–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ ‚Ññ" + page + " –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∂–æ–¥–Ω–æ–≥–æ –Ω–æ–≤–æ–≥–æ –∑–∞–ø–∏—Å—É ‚Üí –∑–∞–≤–µ—Ä—à—É—î–º–æ —Å–∫—Ä–µ–π–ø—ñ–Ω–≥.");
                break;
            }

            page++;
        }

        // === 5. –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤—Å—ñ –∑—ñ–±—Ä–∞–Ω—ñ –∫–Ω–∏–≥–∏ –æ–¥–Ω–∏–º saveAll(...) ===
        if (!resultList.isEmpty()) {
            comicsRepository.saveAll(resultList);
            System.out.println("\n‚úÖ –£—Å–ø—ñ—à–Ω–æ –∑–±–µ—Ä–µ–∂–µ–Ω–æ " + resultList.size() + " —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏—Ö –∫–Ω–∏–∂–æ–∫ —ñ–∑ Yakaboo.");
        } else {
            System.out.println("\n‚ö†Ô∏è –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∂–æ–¥–Ω–æ—ó –∫–Ω–∏–∂–∫–∏ –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è.");
        }
    }

    /**
     * –ì–µ–Ω–µ—Ä—É—î –≤–∏–ø–∞–¥–∫–æ–≤—É –¥–∞—Ç—É —É –º–µ–∂–∞—Ö –æ—Å—Ç–∞–Ω–Ω—ñ—Ö {@code yearsBack} —Ä–æ–∫—ñ–≤.
     */
    private LocalDate randomPastDate(int yearsBack) {
        LocalDate now = LocalDate.now();
        int daysBack = random.nextInt(yearsBack * 365 + 1);
        return now.minusDays(daysBack);
    }
}


//
///**
// * –°–µ—Ä–≤—ñ—Å, —â–æ —Å–∫—Ä–µ–π–ø–∏—Ç—å –Ω–∞–∑–≤–∏ –π –æ–ø–∏—Å–∏ —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏—Ö —Ä–æ–º–∞–Ω—ñ–≤ —ñ–∑ –í—ñ–∫—ñ–ø–µ–¥—ñ—ó:
// * –∫–∞—Ç–µ–≥–æ—Ä—ñ—è ¬´–£–∫—Ä–∞—ó–Ω—Å—å–∫—ñ —Ä–æ–º–∞–Ω–∏¬ª.
// * –Ü–Ω—à—ñ –ø–æ–ª—è –æ–±'—î–∫—Ç—ñ–≤ (author, status, viewCount —Ç–æ—â–æ) –∑–∞–ø–æ–≤–Ω—é—é—Ç—å—Å—è –∑–∞–≥–ª—É—à–∫–∞–º–∏ –∞–±–æ –≤–∏–ø–∞–¥–∫–æ–≤–∏–º–∏ –∑–Ω–∞—á–µ–Ω–Ω—è–º–∏.
// */
//@Service
//@RequiredArgsConstructor
//public class UkrainianBookScraperService {
//
//    private final ComicsRepository comicsRepository;
//    private final EmbeddingService embeddingService;
//
//    // –ê–¥—Ä–µ—Å–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó ¬´–£–∫—Ä–∞—ó–Ω—Å—å–∫—ñ —Ä–æ–º–∞–Ω–∏¬ª —É –í—ñ–∫—ñ–ø–µ–¥—ñ—ó
//    private static final String WIKI_CATEGORY_URL =
//            "https://uk.wikipedia.org/wiki/–ö–∞—Ç–µ–≥–æ—Ä—ñ—è:–£–∫—Ä–∞—ó–Ω—Å—å–∫—ñ_—Ä–æ–º–∞–Ω–∏";
//
//    private final Random random = new Random();
//
//    /**
//     * –°–∫—Ä–µ–π–ø–∏—Ç—å –ø–µ—Ä—à—ñ {@code count} —Ç–≤–æ—Ä—ñ–≤ —ñ–∑ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó ¬´–£–∫—Ä–∞—ó–Ω—Å—å–∫—ñ —Ä–æ–º–∞–Ω–∏¬ª —É –í—ñ–∫—ñ–ø–µ–¥—ñ—ó:
//     * –±–µ—Ä–µ ¬´title¬ª (–∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–æ—Ä—ñ–Ω–∫–∏) —Ç–∞ ¬´description¬ª (–ø–µ—Ä—à–∏–π –∑–Ω–∞—á—É—â–∏–π –∞–±–∑–∞—Ü).
//     * –†–µ—à—Ç–∞ –ø–æ–ª—ñ–≤ (author, status, viewCount —Ç–æ—â–æ) ‚Äî –∑–∞–≥–ª—É—à–∫–∞–º–∏ —á–∏ —Ä–∞–Ω–¥–æ–º–Ω–∏–º–∏ –∑–Ω–∞—á–µ–Ω–Ω—è–º–∏.
//     *
//     * @param count –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–Ω–∏–∂–æ–∫ (—Ä–æ–º–∞–Ω—ñ–≤) –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 100
//     * @throws IOException —É —Ä–∞–∑—ñ –ø—Ä–æ–±–ª–µ–º —ñ–∑ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è–º —á–∏ –ø–∞—Ä—Å–∏–Ω–≥–æ–º HTML
//     */
//    @Transactional
//    public void scrapeAndSaveUkrainianBooks(int count) throws IOException {
//        System.out.println("=== –ü–æ—á–∏–Ω–∞—î–º–æ —Å–∫—Ä–µ–π–ø—ñ–Ω–≥ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó ¬´–£–∫—Ä–∞—ó–Ω—Å—å–∫—ñ —Ä–æ–º–∞–Ω–∏¬ª (–í—ñ–∫—ñ–ø–µ–¥—ñ—è) ===");
//
//        // 1) –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ HTML —Å–∞–º–æ—ó –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
//        Document categoryDoc;
//        try {
//            categoryDoc = Jsoup.connect(WIKI_CATEGORY_URL)
//                    .userAgent("Mozilla/5.0")
//                    .timeout(10_000)
//                    .get();
//            System.out.println("‚úÖ –£—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏–ª–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó: " + WIKI_CATEGORY_URL);
//        } catch (IOException e) {
//            System.err.println("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏—Å—è –¥–æ: " + WIKI_CATEGORY_URL);
//            throw e;
//        }
//
//        // 2) –ó–±–∏—Ä–∞—î–º–æ —É—Å—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Å—Ç–∞—Ç—Ç—ñ —É –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
//        //    –°—Ç–æ—Ä—ñ–Ω–∫–∞ –í—ñ–∫—ñ–ø–µ–¥—ñ—ó: —É—Å—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –ª–µ–∂–∞—Ç—å —É <div class="mw-category"> ‚Üí div.mw-category-group ‚Üí ul ‚Üí li ‚Üí a
//        Elements linkElements = categoryDoc.select("div.mw-category div.mw-category-group ul li a");
//        if (linkElements.isEmpty()) {
//            System.err.println("‚ö†Ô∏è –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∂–æ–¥–Ω–æ–≥–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è —É –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó ¬´–£–∫—Ä–∞—ó–Ω—Å—å–∫—ñ —Ä–æ–º–∞–Ω–∏¬ª");
//            return;
//        }
//        System.out.println("üîç –ó–Ω–∞–π–¥–µ–Ω–æ –≤ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó ¬´–£–∫—Ä–∞—ó–Ω—Å—å–∫—ñ —Ä–æ–º–∞–Ω–∏¬ª –ø–æ—Å–∏–ª–∞–Ω—å (—Ä–æ–º–∞–Ω—ñ–≤): " + linkElements.size());
//
//        // 3) –í–∏–±–∏—Ä–∞—î–º–æ –ø–µ—Ä—à—ñ count (–∞–±–æ, —è–∫—â–æ —ó—Ö –º–µ–Ω—à–µ, ‚Äî —É—Å—ñ)
//        int totalFound = linkElements.size();
//        int toTake = Math.min(count, totalFound);
//        System.out.println("üìã –ü–ª–∞–Ω—É—î–º–æ –≤–∑—è—Ç–∏ –ø–µ—Ä—à–∏—Ö " + toTake + " —Ä–æ–º–∞–Ω—ñ–≤ –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è.");
//
//        List<Comics> resultList = new ArrayList<>(toTake);
//
//        // 4) –î–ª—è –∫–æ–∂–Ω–æ–≥–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è:
//        //    - href –≤–∏–¥–∞—î —à–ª—è—Ö /wiki/–ù–∞–∑–≤–∞_—Å—Ç–æ—Ä—ñ–Ω–∫–∏
//        //    - —Ç–µ–∫—Å—Ç –µ–ª–µ–º–µ–Ω—Ç–∞ ‚Äî —Ü–µ –Ω–∞–∑–≤–∞ —Ä–æ–º–∞–Ω—É —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é
//        for (int i = 0; i < toTake; i++) {
//            Element a = linkElements.get(i);
//            String href = a.attr("href").trim();
//            String title = a.text().trim();
//
//            if (href.isEmpty() || title.isEmpty()) {
//                System.out.println("  ‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ –µ–ª–µ–º–µ–Ω—Ç ‚Ññ" + (i + 1) + ": href —á–∏ title –ø—É—Å—Ç–∏–π.");
//                continue;
//            }
//
//            // –ü–æ–≤–Ω–∏–π URL –Ω–∞ —Å—Ç–∞—Ç—Ç—é
//            String articleUrl = href.startsWith("http")
//                    ? href
//                    : "https://uk.wikipedia.org" + href;
//
//            System.out.println("\n--- –û–±—Ä–æ–±–ª—è—î–º–æ —Ä–æ–º–∞–Ω ‚Ññ" + (i + 1) + " —ñ–∑ —Å–ø–∏—Å–∫—É ---");
//            System.out.println("URL —Å—Ç–∞—Ç—Ç—ñ: " + articleUrl);
//            System.out.println("–ù–∞–∑–≤–∞ (title): " + title);
//
//            // 5) –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –¥–µ—Ç–∞–ª—å–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É —Ä–æ–º–∞–Ω—É –π –≤–∏—Ç—è–≥—É—î–º–æ –ø–µ—Ä—à–∏–π –∑–Ω–∞—á—É—â–∏–π <p>
//            String description = "";
//            try {
//                Document articleDoc = Jsoup.connect(articleUrl)
//                        .userAgent("Mozilla/5.0")
//                        .timeout(10_000)
//                        .get();
//                // –£ –í—ñ–∫—ñ–ø–µ–¥—ñ—ó –ø—ñ—Å–ª—è <div id="mw-content-text"> –π–¥—É—Ç—å –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∏ <p>
//                Elements paragraphs = articleDoc.select("div.mw-parser-output > p");
//                // –Ü–Ω–æ–¥—ñ –ø–µ—Ä—à–∏–π <p> –±—É–≤–∞—î –ø—É—Å—Ç–∏–º –∞–±–æ –º—ñ—Å—Ç–∏—Ç—å –ª–∏—à–µ –∫—É—Ä—Å–∏–≤–Ω–∏–π —à–∞–±–ª–æ–Ω ‚Äú(‚Ä¶)‚Äù,
//                // —Ç–æ–º—É –ø—Ä–æ—Ö–æ–¥–∏–º–æ—Å—è –ø–æ–∫–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–º–æ –Ω–µ–ø–æ—Ä–æ–∂–Ω—ñ–π —Ç–µ–∫—Å—Ç.
//                for (Element p : paragraphs) {
//                    String text = p.text().trim();
//                    if (!text.isEmpty()) {
//                        description = text;
//                        break;
//                    }
//                }
//                if (description.isEmpty()) {
//                    System.out.println("  ‚ö†Ô∏è –ù–µ –∑–Ω–∞–π—à–ª–∏ –∂–æ–¥–Ω–æ–≥–æ –Ω–µ–ø–æ—Ä–æ–∂–Ω—å–æ–≥–æ –∞–±–∑–∞—Ü—É —É —Å—Ç–∞—Ç—Ç—ñ. –û–ø–∏—Å –∑–∞–ª–∏—à–∏—Ç—å—Å—è –ø—É—Å—Ç–∏–º.");
//                } else {
//                    System.out.println("  üìù –ü–µ—Ä—à–∏–π –∞–±–∑–∞—Ü-–æ–ø–∏—Å (–ø—Ä–∏–±–ª–∏–∑–Ω–æ 60 —Å–∏–º–≤–æ–ª—ñ–≤): " +
//                            (description.length() > 60 ? description.substring(0, 60) + "‚Ä¶" : description));
//                }
//            } catch (IOException ex) {
//                System.err.println("  ‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–µ—Ç–∞–ª—å–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É: " + articleUrl);
//                description = "";
//            }
//
//            // 6) –°—Ç–≤–æ—Ä—é—î–º–æ –æ–±‚Äô—î–∫—Ç Comics —ñ –∑–∞–ø–æ–≤–Ω—é—î–º–æ –≤—Å—ñ –ø–æ–ª—è
//            Comics book = new Comics();
//
//            // 6.1 –ù–∞–∑–≤–∞ —Ç–∞ originalTitle —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é (–Ω–∞–∑–≤–∞ —Å—Ç–∞—Ç—Ç—ñ)
//            book.setTitle(title);
//            book.setOriginalTitle(title);
//
//            // 6.2 –ê–≤—Ç–æ—Ä ‚Äî –∑–∞–≥–ª—É—à–∫–∞ ¬´–ê–≤—Ç–æ—Ä –Ω–µ–≤—ñ–¥–æ–º–∏–π¬ª
//            book.setAuthor("–ê–≤—Ç–æ—Ä –Ω–µ–≤—ñ–¥–æ–º–∏–π");
//
//            // 6.3 –û–ø–∏—Å (–≤–∏—Ç—è–≥–Ω—É—Ç–∏–π —ñ–∑ –í—ñ–∫—ñ–ø–µ–¥—ñ—ó)
//            book.setDescription(description);
//
//            // 6.4 –¢–∏–ø–∏ ‚Äî BOOKS
//            book.setComicsType(ComicsType.BOOKS);
//            book.setPublicationType(PublicationType.BOOK);
//
//            // 6.5 –î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–ø–∏—Å—É (–∑–∞—Ä–∞–∑) —Ç–∞ –≤–∏–ø–∞–¥–∫–æ–≤–∞ –¥–∞—Ç–∞ –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó
//            book.setCreatedAt(LocalDateTime.now());
//            book.setPublishedAt(randomPastDate(5));  // –≤–∏–ø–∞–¥–∫–æ–≤–∞ –¥–∞—Ç–∞ –∑–∞ –æ—Å—Ç–∞–Ω–Ω—ñ 5 —Ä–æ–∫—ñ–≤
//
//            // 6.6 –°—Ç–∞—Ç—É—Å ‚Äî ¬´PUBLISHED¬ª
//            book.setStatus("PUBLISHED");
//
//            // 6.7 –û–±–∫–ª–∞–¥–∏–Ω–∫–∞ —Ç–∞ imageType ‚Äî –ø–æ–∫–∏ —â–æ null
//            book.setCoverImage(null);
//            book.setImageType(null);
//
//            // 6.8 ViewCount —Ç–∞ popularRating ‚Äî –≤–∏–ø–∞–¥–∫–æ–≤—ñ –∑–Ω–∞—á–µ–Ω–Ω—è
//            int vc = random.nextInt(1000);
//            double pop = 1.0 + random.nextDouble() * 4.0;
//            book.setViewCount(vc);
//            book.setPopularityRating(pop);
//            System.out.println("  üéØ viewCount=" + vc + ", popularityRating=" + String.format("%.2f", pop));
//
//            // 6.9 –ï–º–±–µ–¥–¥—ñ–Ω–≥ –æ–ø–∏—Å—É (—è–∫—â–æ –æ–ø–∏—Å –Ω–µ –ø–æ—Ä–æ–∂–Ω—ñ–π)
//            if (!description.isBlank()) {
//                try {
//                    float[] embedding = embeddingService.getEmbedding(description);
//                    byte[] embBytes = ComicsUtil.serializeFloatArray(embedding);
//                    book.setDescriptionEmbedding(embBytes);
//                    System.out.println("    ‚úÖ –ï–º–±–µ–¥–¥—ñ–Ω–≥ —É—Å–ø—ñ—à–Ω–æ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ.");
//                } catch (Exception ex) {
//                    book.setDescriptionEmbedding(null);
//                    System.err.println("    ‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –µ–º–±–µ–¥–¥—ñ–Ω–≥—É: " + ex.getMessage());
//                }
//            } else {
//                book.setDescriptionEmbedding(null);
//            }
//
//            // 6.10 –ü–æ—Ä–æ–∂–Ω—ñ —Å–ø–∏—Å–∫–∏ –¥–ª—è –∑–≤‚Äô—è–∑–∫—ñ–≤ (–∂–∞–Ω—Ä–∏, chapters, comments —Ç–æ—â–æ)
//            book.setGenres(new ArrayList<>());
//            book.setChapters(new ArrayList<>());
//            book.setComments(new ArrayList<>());
//            book.setTabs(new ArrayList<>());
//            book.setStatistics(new ArrayList<>());
//            book.setRatings(new ArrayList<>());
//
//            // 6.11 –î–æ–¥–∞—î–º–æ –¥–æ —Ñ—ñ–Ω–∞–ª—å–Ω–æ–≥–æ —Å–ø–∏—Å–∫—É
//            resultList.add(book);
//            System.out.println("  ‚úÖ –î–æ–¥–∞–Ω–æ –¥–æ —Å–ø–∏—Å–∫—É (—Ç–µ–ø–µ—Ä —É —Å–ø–∏—Å–∫—É " + resultList.size() + " –∫–Ω–∏–≥).");
//        }
//
//        // 7) –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤—Å—ñ –∑—ñ–±—Ä–∞–Ω—ñ –æ–±‚Äô—î–∫—Ç–∏ –æ–¥–Ω–∏–º saveAll(...)
//        if (!resultList.isEmpty()) {
//            comicsRepository.saveAll(resultList);
//            System.out.println("\n‚úÖ –£—Å–ø—ñ—à–Ω–æ –∑–±–µ—Ä–µ–∂–µ–Ω–æ " +
//                    resultList.size() +
//                    " —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏—Ö —Ä–æ–º–∞–Ω—ñ–≤ (–∑—ñ —Å—Ç–∞—Ç–µ–π –í—ñ–∫—ñ–ø–µ–¥—ñ—ó).");
//        } else {
//            System.out.println("\n‚ö†Ô∏è –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∂–æ–¥–Ω–æ–≥–æ —Ä–æ–º–∞–Ω—É –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è.");
//        }
//    }
//
//    /** –ì–µ–Ω–µ—Ä—É—î –≤–∏–ø–∞–¥–∫–æ–≤—É –¥–∞—Ç—É –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó —É –º–µ–∂–∞—Ö –æ—Å—Ç–∞–Ω–Ω—ñ—Ö {@code yearsBack} —Ä–æ–∫—ñ–≤. */
//    private LocalDate randomPastDate(int yearsBack) {
//        LocalDate now = LocalDate.now();
//        int daysBack = random.nextInt(yearsBack * 365 + 1);
//        return now.minusDays(daysBack);
//    }
//}
